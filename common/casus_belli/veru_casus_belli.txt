#my_casus_belli = {
#	potential = { ... }		# trigger to make some CBs invalid for certain types of countries; this = attacker (CB owner); default: { always = yes }
#	is_valid = { ... }		# trigger, evaluated daily to check if CB should be created or destroyed automatically, does not affect CBs granted via script;
#								# this = attacker (CB owner), from = defender (target country); default: { always = yes }
#	destroy_if = { ... }	# trigger, evaluated daily to destroy CBs that have been granted via script ahead of expiration date;
#								# this = attacker (CB owner), from = defender (target country); default: { always = no }
#	show_notification = no/yes	# optional (default = yes), flag to control whether this CB will generate a notification (to avoid duplicate
#								# notification when a claim CB is generated)
#}

cb_buffer_zone = {
	show_in_diplomacy = yes
	show_notification = yes
	potential = {
		is_subject = no
		is_country_type_with_subjects = yes
		NOR = {
			is_in_federation_with = from
			has_defensive_pact = from
			has_non_aggression_pact = from
		}
	}
	is_valid = {
		OR = {
			any_system_within_border = {
				closest_system = {
					limit = {
						exists = space_owner
						space_owner = {
							is_subject = yes
							NOT = { any_agreement = { agreement_preset = preset_auto_state } }
							exists = overlord
							overlord = { is_same_value = from }
						}
					}
					use_bypasses = yes
					max_steps = 1
				}
			}
			any_subject = {
				NOT = { any_agreement = { agreement_preset = preset_auto_state } }
				any_system_within_border = {
					closest_system = {
						limit = {
							exists = space_owner
							space_owner = {
								is_subject = yes
								exists = overlord
								overlord = { is_same_value = from }
							}
						}
						use_bypasses = yes
						max_steps = 1
					}
				}
			}
		}
		has_total_war_cb = no
	}
}